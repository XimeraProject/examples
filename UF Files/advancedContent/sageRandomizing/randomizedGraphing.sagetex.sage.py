## -*- encoding: utf-8 -*-


# This file was *autogenerated* from the file randomizedGraphing.sagetex.sage
from sage.all_cmdline import *   # import sage library

_sage_const_41 = Integer(41); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_61 = Integer(61); _sage_const_66 = Integer(66); _sage_const_68 = Integer(68); _sage_const_1 = Integer(1); _sage_const_71 = Integer(71); _sage_const_74 = Integer(74)## This file (randomizedGraphing.sagetex.sage) was *autogenerated* from randomizedGraphing.tex with sagetex.sty version 2019/11/14 v3.4.
import sagetex
_st_ = sagetex.SageTeXProcessor('randomizedGraphing', version='2019/11/14 v3.4', version_check=True)
_st_.current_tex_line = _sage_const_41 
_st_.blockbegin()
try:
 def RandInt(a,b):
     """ Returns a random integer in [`a`,`b`]. Note that `a` and `b` should be integers themselves to avoid unexpected behavior.
     """
     return QQ(randint(int(a),int(b)))
     # return choice(range(a,b+1))
 
 def NonZeroInt(b,c, avoid = [_sage_const_0 ]):
     """ Returns a random integer in [`b`,`c`] which is not in `av`.
         If `av` is not specified, defaults to a non-zero integer.
     """
     while True:
         a = RandInt(b,c)
         if a not in avoid:
             return a
 
 p1temp1 = 'temp'
 
 p1temp2 = x**_sage_const_2  + NonZeroInt(-_sage_const_2 ,_sage_const_2 )
 plot(p1temp2,(x,-_sage_const_3 ,_sage_const_3 ))
except:
 _st_.goboom(_sage_const_61 )
_st_.blockend()
try:
 _st_.current_tex_line = _sage_const_66 
 _st_.inline(_sage_const_0 , latex(p1temp2))
except:
 _st_.goboom(_sage_const_66 )
try:
 _st_.current_tex_line = _sage_const_68 
 _st_.plot(_sage_const_0 , format='notprovided', _p_=plot(p1temp2, -_sage_const_1 , _sage_const_1 ))
except:
 _st_.goboom(_sage_const_68 )
try:
 _st_.current_tex_line = _sage_const_71 
 _st_.inline(_sage_const_1 , p1temp1)
except:
 _st_.goboom(_sage_const_71 )
try:
 _st_.current_tex_line = _sage_const_74 
 _st_.inline(_sage_const_2 , p1temp1)
except:
 _st_.goboom(_sage_const_74 )
_st_.endofdoc()

